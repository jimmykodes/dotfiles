#!/usr/bin/env bash

# make sure this is a git repo before doing anything
if ! command git rev-parse --git-dir &>/dev/null; then
	echo "Not a git repo"
	exit 1
fi

current=$(git rev-parse --abbrev-ref HEAD)
main=$(git main-branch || echo 'main')
dev=$(git dev-branch || echo 'dev')

if [[ "$current" != "$main" && "$current" != "$dev" ]]; then
	echo "must be on main or dev branch to run this command"
	exit 2
fi

echo "Pruning remote branches"
git fetch --prune

echo "Removing merged branches"
git branch --no-color --merged | grep -vE "^([+*]|\s*(${main}|${dev}))\s*$)" | xargs git branch -d 2>/dev/null

check_and_clean() {
	local ref="$1"
	local branch
	local upstream

	branch=$(awk '{print $1}' <<<"$ref")
	upstream=$(awk '{print $2}' <<<"$ref")

	if [[ -z $upstream ]]; then
		# no upstream, do nothing
		return
	fi

	if ! git show-ref -q --verify "refs/remotes/$upstream"; then
		git branch -D "$branch"
	fi
}

echo "Removing branches with missing upstream"
git upstream | while IFS= read -r ref; do
	check_and_clean "$ref"
done
